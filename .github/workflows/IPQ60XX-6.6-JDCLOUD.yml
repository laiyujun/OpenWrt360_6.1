#CI项目
name: IPQ60XX-6.6-JDCLOUD

#CI计划
on:
  #自动编译：每个星期五早上4点
  schedule:
    - cron: 0 16 * * 5
  #推送代码编译
  push:
  workflow_dispatch:
    inputs:
      TARGET:
        default: 'ipq60xx-6.6-wifi(emmc)'
        required: true
        type: choice
        description: 'config filename'
        options: [ 'ipq60xx-6.6-wifi(emmc)', 'x86-64' ]
      SOURCE:
        default: 'LiBwrt-op/openwrt-6.x'
        required: true
        type: choice
        description: 'repo source name'
        options: [ 'VIKINGYFY/immortalwrt', 'immortalwrt/immortalwrt', 'King-Of-Knights/openwrt-6.x', 'LiBwrt-op/openwrt-6.x']
      BRANCH:
        default: 'k6.12-nss'
        required: true
        description: 'branch name'
        type: string
      COMMIT:
        required: false
        description: '可编译代码commit id'
        type: string
      PACKAGE:
        required: false
        description: 'add package name'
        type: string
      PATCH:
        description: '打patch开关'
        required: true
        default: '否'
        type: choice
        options: [是, 否]
      TEST:
        description: '仅输出配置文件，不编译固件。'
        default: '否'
        required: false
        type: choice
        options: [是, 否]

#CI权限
permissions: write-all

#CI任务
jobs:
  config:
    name: ${{inputs.TARGET || matrix.TARGET}}
    strategy:
      fail-fast: false
      #max-parallel: 3
      matrix:
        TARGET: [ ipq60xx-6.6-wifi(emmc) ]
        SOURCE: [ LiBwrt-op/openwrt-6.x ]
        BRANCH: [ k6.12-nss ]
    #调用公用编译核心XX-CORE.yml
    uses: ./.github/workflows/IPQ60XX-6.6-WIFI(EMMC).yml
    with:
      #编译平台
      WRT_TARGET: ${{inputs.TARGET || matrix.TARGET}}
      #默认主题
      WRT_THEME: argon
      #默认主机名
      WRT_NAME: OpenWrt
      #默认WIFI名
      WRT_WIFI: OpenWrt
      #默认地址
      WRT_IP: 192.168.10.1
      #默认密码，仅作提示，修改无用
      WRT_PW: 无
      #源码链接
      WRT_REPO: https://github.com/${{inputs.SOURCE || matrix.SOURCE}}.git
      #源码分支
      WRT_BRANCH: ${{inputs.BRANCH || matrix.BRANCH}}
      #源码名称
      WRT_SOURCE: ${{inputs.SOURCE || matrix.SOURCE}}
      #patch开关
      WRT_PATCH: ${{inputs.PATCH || '否'}}
      #回滚到指定commit
      WRT_COMMIT: ${{inputs.COMMIT}}
      #插件调整
      WRT_PACKAGE: ${{inputs.PACKAGE}}
      #仅输出配置文件
      WRT_TEST: ${{inputs.TEST}}
